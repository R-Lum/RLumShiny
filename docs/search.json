[{"path":"https://tzerk.github.io/RLumShiny/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Christoph Burow. Author, maintainer. Urs Tilmann Wolpert. Author. Sebastian Kreutzer. Author. Marco Colombo. Author. R Luminescence Package Team. Contributor. Jan Odvarko. Copyright holder.           jscolor.js www/jscolor AnalytixWare. Copyright holder.           ShinySky package RStudio. Copyright holder.           chooser_inputBinding.js www/ chooser.R R/","code":""},{"path":"https://tzerk.github.io/RLumShiny/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burow C, Wolpert U, Kreutzer S, Colombo M (2025). RLumShiny: 'Shiny' Applications R Package 'Luminescence'. R package version 0.2.5, https://tzerk.github.io/RLumShiny/.","code":"@Manual{,   title = {RLumShiny: 'Shiny' Applications for the R Package 'Luminescence'},   author = {Christoph Burow and Urs Tilmann Wolpert and Sebastian Kreutzer and Marco Colombo},   year = {2025},   note = {R package version 0.2.5},   url = {https://tzerk.github.io/RLumShiny/}, }"},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"rlumshiny-","dir":"","previous_headings":"","what":"Shiny Applications for the R Package Luminescence","title":"Shiny Applications for the R Package Luminescence","text":"Visit project page!","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Shiny Applications for the R Package Luminescence","text":"collection shiny applications R package Luminescence. mainly, exclusively, include applications plotting chronometric data e.g. luminescence radiocarbon dating. provides access twitter bootstraps tooltip pop functionality contains jscolor.js library custom shiny output binding.","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Shiny Applications for the R Package Luminescence","text":"install stable version CRAN, simply run following R console: install latest development builds directly GitHub, run","code":"install.packages(\"RLumShiny\") if (!require(\"devtools\"))   install.packages(\"devtools\") devtools::install_github(\"tzerk/RLumShiny@master\")"},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"applications","dir":"","previous_headings":"","what":"Applications","title":"Shiny Applications for the R Package Luminescence","text":"RLumShiny package provides single function apps can started: app_RLum(). essentially takes one argument, unique keyword specify app start. See table list available apps keywords use. app_RLum() function just wrapper shiny::runApp(). Via ... argument arguments can directly passed shiny::runApp(). See ?shiny::runApp details valid arguments. † Requires development version Luminescence package (> v1.0.1) yet CRAN.","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"extending-shiny","dir":"","previous_headings":"","what":"Extending Shiny","title":"Shiny Applications for the R Package Luminescence","text":"addition main purpose providing convenient access Luminescence shiny applications package also provides functions extend functionality shiny. Bootstrap framework JavaScript tooltip popover components can added shiny application via tooltip() popover(). provides custom input binding JavaScript/HTML color picker JSColor. Offering access options provided JSColor API function jscolorInput() easily implemented shiny app. RGB colors returned hex values can directly used R’s base plotting functions without requiring format conversion.","code":""},{"path":[]},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"abanico-plot-app","dir":"","previous_headings":"Examples","what":"Abanico Plot app","title":"Shiny Applications for the R Package Luminescence","text":"app_RLum(\"abanico\") Abanico app","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"tooltip","dir":"","previous_headings":"Examples","what":"Tooltip","title":"Shiny Applications for the R Package Luminescence","text":"tooltip(refId, text, attr = NULL, animation = TRUE, delay = 100, html = TRUE, placement = \"auto\", trigger = \"hover\") tooltip","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"jscolor","dir":"","previous_headings":"Examples","what":"JSColor","title":"Shiny Applications for the R Package Luminescence","text":"jscolorInput(inputId, label, value, position = \"bottom\", color = \"transparent\", mode = \"HSV\", slider = TRUE, close = FALSE) jscolor.js","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"contribute","dir":"","previous_headings":"","what":"Contribute","title":"Shiny Applications for the R Package Luminescence","text":"package part R Luminescence project. based evolves ideas, contributions constructive criticism users. Help us maintain develop package, find bugs create new functions well user-friendly design. Visit message board write us e-mail anything crosses mind want new self-written shiny application implemented. kindly invited bring forward package us!","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"note","dir":"","previous_headings":"","what":"Note","title":"Shiny Applications for the R Package Luminescence","text":"version development version comes without guarantee! stable branches please visit package CRAN ‘RLumShiny’.","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Shiny Applications for the R Package Luminescence","text":"'RLumShiny' package licensed GPLv3. See files main directory additional details: LICENSE.note","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Shiny Applications for the R Package Luminescence","text":"contributions 2025 supported DFG programme “REPLAY: REProducible Luminescence Data AnalYses” 528704761 led Dr Sebastian Kreutzer (PI Heidelberg University, DE) Dr Thomas Kolb (PI Justus-Liebig-University Giessen, DE).","code":""},{"path":"https://tzerk.github.io/RLumShiny/index.html","id":"related-projects","dir":"","previous_headings":"","what":"Related projects","title":"Shiny Applications for the R Package Luminescence","text":"RLumModel Luminescence RCarb","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/RLumShiny-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny Applications for the R Package Luminescence — RLumShiny-package","title":"Shiny Applications for the R Package Luminescence — RLumShiny-package","text":"collection shiny applications R package Luminescence. mainly, exclusively, include applications plotting chronometric data e.g. luminescence radiocarbon dating. provides access bootstraps tooltip popover functionality well binding JSColor.","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/RLumShiny-package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Shiny Applications for the R Package Luminescence — RLumShiny-package","text":"addition main purpose providing convenient access Luminescence shiny applications (see app_RLum) package also provides functions extend functionality shiny. Bootstrap framework JavaScript tooltip popover components can added shiny application via tooltip popover. provides custom input binding JavaScript/HTML color picker JSColor. Offering access options provided JSColor API function jscolorInput easily implemented shiny app. RGB colors returned hex values can directly used R's base plotting functions without need format conversion.","code":""},{"path":[]},{"path":"https://tzerk.github.io/RLumShiny/reference/RLumShiny-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Shiny Applications for the R Package Luminescence — RLumShiny-package","text":"Maintainer: Christoph Burow christoph.burow@gmx.net (ORCID) Authors: Urs Tilmann Wolpert Sebastian Kreutzer (ORCID) Marco Colombo (ORCID) contributors: R Luminescence Package Team [contributor] Jan Odvarko (jscolor.js www/jscolor) [copyright holder] AnalytixWare (ShinySky package) [copyright holder] RStudio (chooser_inputBinding.js www/ chooser.R R/) [copyright holder]","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/RLumShinyAddin.html","id":null,"dir":"Reference","previous_headings":"","what":"RLumShiny Dashboard Addin — RLumShinyAddin","title":"RLumShiny Dashboard Addin — RLumShinyAddin","text":"RLumShiny dashboard","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/RLumShinyAddin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RLumShiny Dashboard Addin — RLumShinyAddin","text":"","code":"RLumShinyAddin()"},{"path":"https://tzerk.github.io/RLumShiny/reference/app_RLum.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Luminescence shiny apps — app_RLum","title":"Run Luminescence shiny apps — app_RLum","text":"wrapper shiny::runApp start interactive shiny apps R package Luminescence. RLumShiny package provides single function shiny apps can started: app_RLum(). essentially takes one argument, unique keyword specifying application start. See table list available shiny apps keywords use. keyword used dashboard started instead, application can started. app_RLum() function just wrapper shiny::runApp. Via ... argument arguments can directly passed shiny::runApp. See ?shiny::runApp details valid arguments.","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/app_RLum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Luminescence shiny apps — app_RLum","text":"","code":"app_RLum(app = NULL, ...)"},{"path":"https://tzerk.github.io/RLumShiny/reference/app_RLum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Luminescence shiny apps — app_RLum","text":"app character (required): name application start. See details list available apps. ... arguments pass shiny::runApp","code":""},{"path":[]},{"path":"https://tzerk.github.io/RLumShiny/reference/app_RLum.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Run Luminescence shiny apps — app_RLum","text":"Christoph Burow, University Cologne (Germany)","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/app_RLum.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run Luminescence shiny apps — app_RLum","text":"","code":"if (FALSE) { # \\dontrun{ # Dashboard app_RLum()  # Plotting apps app_RLum(\"abanico\") app_RLum(\"histogram\") app_RLum(\"KDE\") app_RLum(\"radialplot\") app_RLum(\"doserecovery\")  # Further apps app_RLum(\"aliquotsize\") app_RLum(\"cosmicdose\") app_RLum(\"transformCW\") app_RLum(\"filter\") app_RLum(\"fastratio\") app_RLum(\"fading\") app_RLum(\"finitemixture\") app_RLum(\"huntley2006\") app_RLum(\"irsarRF\") app_RLum(\"lmcurve\") app_RLum(\"surfaceexposure\") app_RLum(\"teststimulationpower\") app_RLum(\"scalegamma\") app_RLum(\"RCarb\") } # }"},{"path":"https://tzerk.github.io/RLumShiny/reference/jscolorInput.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a JSColor picker input widget — jscolorInput","title":"Create a JSColor picker input widget — jscolorInput","text":"Creates JSColor (Javascript/HTML Color Picker) widget used shiny applications.","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/jscolorInput.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a JSColor picker input widget — jscolorInput","text":"","code":"jscolorInput(   inputId,   label,   value,   position = \"bottom\",   color = \"transparent\",   mode = \"HSV\",   slider = TRUE,   close = FALSE )"},{"path":"https://tzerk.github.io/RLumShiny/reference/jscolorInput.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a JSColor picker input widget — jscolorInput","text":"inputId character (required): Specifies input slot used access value. label character (optional): Display label control, NULL label. value character (optional): Initial RGB value color picker. Default black ('#000000'). position character (default): Position picker relative text input ('bottom', 'left', 'top', 'right'). color character (default): Picker color scheme ('transparent' default). Use RGB color coding ('000000'). mode character (default): Mode hue, saturation value. Can either 'HSV' 'HVS'. slider logical (default): Show hide slider. close logical (default): Show hide close button.","code":""},{"path":[]},{"path":"https://tzerk.github.io/RLumShiny/reference/jscolorInput.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a JSColor picker input widget — jscolorInput","text":"","code":"# html code jscolorInput(\"col\", \"Color\", \"21BF6B\", slider = FALSE) #> <p>Color<\/p> #> <input id=\"col\" value=\"21BF6B\" class=\"color {hash:true, pickerPosition:&#39;bottom&#39;, pickerBorderColor:&#39;transparent&#39;, pickerFaceColor:&#39;transparent&#39;, pickerMode:&#39;HSV&#39;, slider:false, pickerClosable:false}\" onchange=\"$(&#39;#col&#39;).trigger(&#39;afterChange&#39;)\"/> #> <script>$('#col').trigger('afterChange')<\/script>  # example app if (FALSE) { # \\dontrun{ shinyApp( ui = fluidPage(   jscolorInput(inputId = \"col\", label = \"JSColor Picker\",                value = \"21BF6B\", position = \"right\",                mode = \"HVS\", close = TRUE),   plotOutput(\"plot\") ), server = function(input, output) {   output$plot <- renderPlot({     plot(cars, col = input$col, cex = 2, pch = 16)  }) }) } # }"},{"path":"https://tzerk.github.io/RLumShiny/reference/popover.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bootstrap button with popover — popover","title":"Create a bootstrap button with popover — popover","text":"Add small overlays content housing secondary information.","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/popover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bootstrap button with popover — popover","text":"","code":"popover(   title,   content,   header = NULL,   html = TRUE,   class = \"btn btn-default\",   placement = c(\"right\", \"top\", \"left\", \"bottom\"),   trigger = c(\"click\", \"hover\", \"focus\", \"manual\") )"},{"path":"https://tzerk.github.io/RLumShiny/reference/popover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bootstrap button with popover — popover","text":"title character (required): Title button. content character (required): Text displayed popover. header character (optional): Optional header popover. html logical (default): Insert HTML popover. class logical (default): Bootstrap button class (e.g. \"btn btn-danger\"). placement character (default): position popover - top | bottom | left | right | auto. \"auto\" specified, dynamically reorient popover. example, placement \"auto left\", popover display left possible, otherwise display right. trigger character (default): popover triggered - click | hover | focus | manual.","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/popover.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a bootstrap button with popover — popover","text":"","code":"# html code popover(\"title\", \"Some content\") #> <a tabindex=\"0\" role=\"button\" class=\"btn btn-default\" data-toggle=\"popover\" data-content=\"Some content\" data-animation=\"TRUE\" html=\"TRUE\" data-placement=\"right\" data-trigger=\"click\">title<\/a>  # example app if (FALSE) { # \\dontrun{ shinyApp( ui = fluidPage(   jscolorInput(inputId = \"col\", label = \"JSColor Picker\",                 value = \"21BF6B\", position = \"right\",                 mode = \"HVS\", close = TRUE),   popover(title = \"Help!\", content = \"Call 911\"),   plotOutput(\"plot\") ), server = function(input, output) {   output$plot <- renderPlot({     plot(cars, col = input$col, cex = 2, pch = 16)  }) }) } # }"},{"path":"https://tzerk.github.io/RLumShiny/reference/tooltip.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a bootstrap tooltip — tooltip","title":"Create a bootstrap tooltip — tooltip","text":"Create bootstrap tooltips HTML element used shiny applications.","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/tooltip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a bootstrap tooltip — tooltip","text":"","code":"tooltip(   refId,   text,   attr = NULL,   animation = TRUE,   delay = 100,   html = TRUE,   placement = \"auto\",   trigger = \"hover\" )"},{"path":"https://tzerk.github.io/RLumShiny/reference/tooltip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a bootstrap tooltip — tooltip","text":"refId character (required): id element tooltip attached . text character (required): Text displayed tooltip. attr character (optional): Attach tooltip elements attribute attr='refId'. animation logical (default): Apply CSS fade transition tooltip. delay numeric (default): Delay showing hiding tooltip (ms). html logical (default): Insert HTML tooltip. placement character (default): position tooltip - top | bottom | left | right | auto. 'auto' specified, dynamically reorient tooltip. example, placement 'auto left', tooltip display left possible, otherwise display right. trigger character (default): tooltip triggered - click | hover | focus | manual. may pass multiple triggers; separate space.","code":""},{"path":"https://tzerk.github.io/RLumShiny/reference/tooltip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a bootstrap tooltip — tooltip","text":"","code":"# javascript code tt <- tooltip(\"elementId\", \"This is a tooltip.\") str(tt) #> List of 1 #>  $ :List of 3 #>   ..$ name    : chr \"head\" #>   ..$ attribs : Named list() #>   ..$ children:List of 1 #>   .. ..$ :List of 3 #>   .. .. ..$ name    : chr \"script\" #>   .. .. ..$ attribs : Named list() #>   .. .. ..$ children:List of 1 #>   .. .. .. ..$ : 'html' chr \"$(window).load(function(){ $('#elementId').tooltip({ html: true, \\n                  trigger: 'hover', title: '\"| __truncated__ #>   .. .. .. .. ..- attr(*, \"html\")= logi TRUE #>   .. .. ..- attr(*, \"class\")= chr \"shiny.tag\" #>   ..- attr(*, \"class\")= chr \"shiny.tag\" #>  - attr(*, \"class\")= chr [1:2] \"shiny.tag.list\" \"list\"  # example app if (FALSE) { # \\dontrun{ shinyApp( ui = fluidPage(   jscolorInput(inputId = \"col\", label = \"JSColor Picker\",                 value = \"21BF6B\", position = \"right\",                 mode = \"HVS\", close = TRUE),   tooltip(\"col\", \"This is a JScolor widget\"),      checkboxInput(\"cbox\", \"Checkbox\", FALSE),   tooltip(\"cbox\", \"This is a checkbox\"),      checkboxGroupInput(\"cboxg\", \"Checkbox group\", selected = \"a\",                       choices = c(\"a\" = \"a\",                                  \"b\" = \"b\",                                  \"c\" = \"c\")),   tooltip(\"cboxg\", \"This is a <b>checkbox group<\/b>\", html = TRUE),      selectInput(\"select\", \"Selectinput\", selected = \"a\", choices = c(\"a\"=\"a\", \"b\"=\"b\")),   tooltip(\"select\", \"This is a text input field\", attr = \"for\", placement = \"right\"),      passwordInput(\"pwIn\", \"Passwordinput\"),   tooltip(\"pwIn\", \"This is a password input field\"),      plotOutput(\"plot\") ), server = function(input, output) {   output$plot <- renderPlot({     plot(cars, col = input$col, cex = 2, pch = 16)  }) }) } # }"},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-025-release-date-2025-06-26","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.2.5 (Release date: 2025-06-26)","title":"RLumShiny 0.2.5 (Release date: 2025-06-26)","text":"New application either estimate number grains aliquot compute packing density. Base function: Luminescence::calc_AliquotSize(). Keyword app_RLum(): ‘aliquotsize’. New application fit k-component mixture De distribution differing known standard errors. Base function: Luminescence::calc_FiniteMixture(). Keyword app_RLum(): ‘finitemixture’. New application calculate expected sample specific fraction saturation based model Huntley (2006), using approach implemented Kars et al. (2008) Guralnik et al. (2015). Base function: Luminescence::calc_Huntley2006(). Keyword app_RLum(): ‘huntley2006’. New application analyse IRSAR RF measurements K-feldspar samples performed using protocol according Erfurt et al. (2003) beyond. Base function: Luminescence::analyse_IRSAR.RF(). Keyword app_RLum(): ‘irsarRF’. New application determine weighted non-linear least-squares estimates component parameters LM-OSL curve (Bulur 1996) given number components. Base function: Luminescence::fit_LMCurve(). Keyword app_RLum(): ‘lmcurve’. Added hints file format structure expected app (#45). App abanico: Fix crash summary disabled Fix crash 2σ bar color set none Improve rounding sliders appearance legend App doserecovery: Rework user interface elements Add support given.dose = 0 disable data normalization App histogram: Improve step x-axis range slider App radialplot: Improve appearance legend App surfaceexposure: Rework user interface add tooltips (#4) App transformCW: Make secondary axis label respect scaling factor (#62)","code":""},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-024-release-date-2024-03-21","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.2.4 (Release date: 2024-03-21)","title":"RLumShiny 0.2.4 (Release date: 2024-03-21)","text":"CRAN release: 2025-03-23 package version requires R >= 4.3! Updated reflect changes occurred Luminescence shiny packages. App cosmicdose: Google maps window replaced Open Street Map window Fix crash switching different modes (#23) App doserecovery: Fix partly non-working summary statistics (#2) New checkbox control showing legend App fastratio: Fix matching point style descriptive labels App histogram: Add support breaks (#3) Non-user visible changes satisfy CRAN (anchor notes)","code":""},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-023-release-date-2022-01-29","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.2.3 (Release date: 2022-01-29)","title":"RLumShiny 0.2.3 (Release date: 2022-01-29)","text":"CRAN release: 2022-01-31 package version requires R > 4.0! Updated surfaceexposure app now allows considering multiple mu values using global fit functionality. filter work anymore changes 'shiny'; fixed. filter selector icons deprecated, causing warning terminal; fixed. app RCarb App work anymore changes 'shiny'; fixed. app scalegamma started error message, one option chosen conversion factor wrong; fixed.","code":""},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-022-release-date-2019-01-11","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.2.2 (Release date: 2019-01-11)","title":"RLumShiny 0.2.2 (Release date: 2019-01-11)","text":"CRAN release: 2019-01-11 PREVIEW: New application scales gamma dose rate considering layer--layer variations soil radioactivity. Base function: Luminescence::scale_GammaDose(). Keyword app_RLum(): ‘scalegamma’. NOTE: application start development version 0.9.x R package Luminescence installed function scale_GammaDose() still development. New application support new R package RCarb. Base function RCarb::model_DoseRate(). Keyword app_RLum(): ‘RCarb’ Removed updated deprecated links “”-tab applications.","code":""},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-021-release-date-2018-06-18","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.2.1 (Release date: 2018-06-18)","title":"RLumShiny 0.2.1 (Release date: 2018-06-18)","text":"CRAN release: 2018-06-18 New application compares OSL/IRSL stimulation power measurements performed Freiberg Instruments lexsyg devices check stability stimulation power (Contributed Sebastian Kreutzer). Keyword app_RLum(): ‘teststimulationpower’. New application calculate fast ratio CW-OSL curves Durcan Duller (2011). Base function: Luminescence::calc_FastRatio(). Keyword app_RLum(): ‘fastratio’. New application estimate g-value table Lx/Tx values corresponding waiting times since irradiation apply fading Huntley & Lamothe (2001). Base functions: Luminescence::analyse_FadingMeasurement(), Luminescence::calc_FadingCorr(). Keyword app_RLum(): ‘fading’. New application fit eq. 1 Sohbati et al. (2012a) eq. 12 Sohbati et al. (2012b) OSL surface exposure data. Base function: Luminescence::fit_SurfaceExposure(). Keyword app_RLum(): ‘surfaceexposure’. Output panel showing R code reproduce plot/calculation now properly responsive updates soon input widgets change. Internal: server logic applications simplified. Several minor bugfixes.","code":""},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-020-release-date-2017-06-26","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.2.0 (Release date: 2017-06-26)","title":"RLumShiny 0.2.0 (Release date: 2017-06-26)","text":"CRAN release: 2017-06-26 Major overhaul data input panel applications. Uploaded text files now imported via ‘data.table::fread()’, automatically detects delimiter potential headers. Hence, widgets related data import longer required removed (#14). input data can now directly manipulated newly added spreadsheet(s) data input panels. spreadsheets also allow copy pasting data, uploading file longer way provide user data (#12). New Dashboard addin added. dashboard provides access available applications package can accessed either () addin dropdown menu RStudio IDE (ii) running ‘app_RLum()’ without keyword. Implemented newest shiny feature (v0.14) bookmark current app state. apps now include bookmark button, returns URL query string can used restore app’s state later time. New application plot filter combinations along optional net transmission. Base function: Luminescence::plot_FilterCombinations(). Keyword app_RLum(): ‘filter’. External contribution Urs Tilmann Wolpert (Justus-Liebig-University Giessen) Sebastian Kreutzer (Universite Bordeaux Montaigne). New package dependencies: ‘shinydashboard’, ‘rhandsontable’, ‘data.table’, ‘readxl’ transformCW-app: plot now also shows CW-OSL data curve improved error handling Internal: R documentation re-written Markdown using ‘roxygen2 >=6.0.0’ Several minor bugfixes.","code":""},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-011-release-date-2016-07-20","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.1.1 (Release date: 2016-07-20)","title":"RLumShiny 0.1.1 (Release date: 2016-07-20)","text":"CRAN release: 2016-07-20 New application transform CW OSL curves (keyword ‘transformCW’) using functions ‘CW2pHMi’, ‘CW2pLM’, ‘CW2pLMi’ ‘CW2pPMi’ R package ‘Luminescence’. Removed UI elements used now deprecated function arguments. Added new UI elements arguments added functions version 0.4.2 ‘Luminescence’ package. Removed database feature abanico plot application. Removed dependencies ‘digest’ ‘RCurl’. Removed ‘Exit’ buttons. Code output reproduce plots now generated dynamically reliable. R Luminescence Package Team now properly mentioned contributors. Fixed many typos.","code":""},{"path":"https://tzerk.github.io/RLumShiny/news/index.html","id":"rlumshiny-010-release-date-2015-03-31","dir":"Changelog","previous_headings":"","what":"RLumShiny 0.1.0 (Release date: 2015-03-31)","title":"RLumShiny 0.1.0 (Release date: 2015-03-31)","text":"CRAN release: 2015-03-31 Initial release","code":""}]
